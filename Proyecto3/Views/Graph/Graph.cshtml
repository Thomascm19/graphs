
@{
    ViewBag.Title = "Graph";
}

<h2>Graph</h2>
<script type="text/javascript" src="~/d3/d3.js"></script>
<script type="text/javascript" src="~/d3/d3.layout.js"></script>
<script type="text/javascript" src="~/d3/d3.geom.js"></script>
<style>
    .node {
        stroke: #fff;
        stroke-width: 1.5px;
    }

    text {
        font: 10px sans-serif;
    }

    .link {
        stroke: #999;
        stroke-opacity: .6;
    }
</style>
<script>
    d3.json('../Uploads/data1.json', function (json) {

        var width = 1500,
            height = 1500;

        var color = d3.scale.category20();

        var svg = d3.select('body')
            .append('svg')
            .attr('width', width)
            .attr('height', height);
        // draw the graph nodes
        var node = svg.selectAll(".node")
            .data(json.nodes)
            .enter()
            .append("circle")
            .attr("class", "node")
            .attr("r", function (d) { return d.Creditos + 8; })
            .style("fill", function (d) { return color(d.Semestre); });


        node.append("text")
            .attr("dy", ".3em")
            .style("text-anchor", "middle")
            .text(function (d) { return d.name + " "; });

        // draw the graph edges
        var link = svg.selectAll("line.link")
            .data(json.links)
            .enter().append("line")
            .attr("class", "link")
            .style("stroke-width", function (d) { return Math.sqrt(d.value); });

        // create the layout
        var force = d3.layout.force()
            .charge(-120)
            .linkDistance(30)
            .size([width, height])
            .nodes(json.nodes)
            .links(json.links)
            .start();

        // define what to do one each tick of the animation
        force.on("tick", function () {
            link.attr("x1", function (d) { return d.source.x; })
                .attr("y1", function (d) { return d.source.y; })
                .attr("x2", function (d) { return d.target.x; })
                .attr("y2", function (d) { return d.target.y; });

            node.attr("cx", function (d) { return d.x; })
                .attr("cy", function (d) { return d.y; });
        });
        // bind the drag interaction to the nodes
        node.call(force.drag);
    });
</script>
